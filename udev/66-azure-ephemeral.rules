# Azure specific rules
ACTION!="add|change", GOTO="cloud_init_end"
SUBSYSTEM!="block", GOTO="cloud_init_end"
ATTRS{ID_VENDOR}!="Msft", GOTO="cloud_init_end"
ENV{ID_MODEL}!="Virtual_Disk", GOTO="nvme_disk"

# Root has a GUID of 0000 as the second value on Gen1 instances
# The resource/resource has GUID of 0001 as the second value
ATTRS{device_id}=="?00000000-0000-*", ENV{fabric_name}="azure_root", GOTO="ci_azure_names"
ATTRS{device_id}=="?00000000-0001-*", ENV{fabric_name}="azure_resource", GOTO="ci_azure_names"

# Azure well known SCSI controllers on Gen2 instances
ATTRS{device_id}=="{f8b3781a-1e82-4818-a1c3-63d806ec15bb}", ENV{fabric_scsi_controller}="scsi0", GOTO="azure_datadisk"
# Do not create symlinks for scsi[1-3] or unmatched device_ids
ATTRS{device_id}=="{f8b3781b-1e82-4818-a1c3-63d806ec15bb}", ENV{fabric_scsi_controller}="scsi1", GOTO="cloud_init_end"
ATTRS{device_id}=="{f8b3781c-1e82-4818-a1c3-63d806ec15bb}", ENV{fabric_scsi_controller}="scsi2", GOTO="cloud_init_end"
ATTRS{device_id}=="{f8b3781d-1e82-4818-a1c3-63d806ec15bb}", ENV{fabric_scsi_controller}="scsi3", GOTO="cloud_init_end"
GOTO="cloud_init_end"

# Azure NVMe disks on gen2
# disk names are of the form "nvme<number>n1" where <number> starts from 0.
# disk 0 in most cases seems to be the root disk and disk 1 onwards are data disks.
LABEL="nvme_disk"
ATTRS{model}=="MSFT NVMe Accelerator v1.0", ENV{fabric_name}="azure_root", GOTO="ci_azure_names"
ATTRS{model}=="Microsoft NVMe Direct Disk v2", PROGRAM="/bin/sh -c 'echo %k|cut -c5'", ENV{disk_num}="%c", ENV{fabric_name}="azure_resource", GOTO="azure_nvme_datadisk"
GOTO="cloud_init_end"

# Map scsi#/lun# fabric_name to azure_root|resource on Gen2 instances
LABEL="azure_datadisk"
ENV{DEVTYPE}=="partition", PROGRAM="/bin/sh -c 'readlink /sys/class/block/%k/../device|cut -d: -f4'", ENV{fabric_name}="$env{fabric_scsi_controller}/lun$result"
ENV{DEVTYPE}=="disk", PROGRAM="/bin/sh -c 'readlink /sys/class/block/%k/device|cut -d: -f4'", ENV{fabric_name}="$env{fabric_scsi_controller}/lun$result"

ENV{fabric_name}=="scsi0/lun0", ENV{fabric_name}="azure_root", GOTO="ci_azure_names"
ENV{fabric_name}=="scsi0/lun1", ENV{fabric_name}="azure_resource", GOTO="ci_azure_names"
GOTO="cloud_init_end"

LABEL="azure_nvme_datadisk"
# azure data source ('DataSourceAzure.py') can't handle more than one resource disk
# and it expects it to have a name /dev/disk/cloud/azure_resource
# so we generate /dev/disk/cloud/azure_resource symlink for either disk 0 or disk 1
# whichever we see first.
ENV{disk_num}=="0", ENV{disk0_seen}="yes"
ENV{disk_num}=="1", ENV{disk1_seen}="yes"
ENV{disk_num}!="0", ENV{disk_num}!="1", ENV{fabric_name}="$env{fabric_name}-disk$env{disk_num}"
# If we see both disk 0 and disk 1 as data disks (rare), disk 0 will have symlink "azure_resource"
# and disk 1 onwards will have symlink "azure_resource-diskN" etc.
ENV{disk_num}=="1", ENV{disk0_seen}=="yes", ENV{fabric_name}="$env{fabric_name}-disk$env{disk_num}"
ENV{disk_num}=="0", ENV{disk1_seen}=="yes", ENV{fabric_name}="$env{fabric_name}-disk$env{disk_num}"

# Create the symlinks
LABEL="ci_azure_names"
ENV{DEVTYPE}=="disk", SYMLINK+="disk/cloud/$env{fabric_name}"
ENV{DEVTYPE}=="partition", SYMLINK+="disk/cloud/$env{fabric_name}-part%n"

LABEL="cloud_init_end"
